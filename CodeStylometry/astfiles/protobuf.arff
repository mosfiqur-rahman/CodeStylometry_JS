@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {@data
@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {@data
@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {astfiles}

@data
protobuf.js,0,@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {astfiles}

@data
protobuf.js,0,@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {astfiles}

@data
protobuf.js,0,0,0,@relation 2mallory_dataset_SFS_2

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {astfiles}

@data
protobuf.js,0,0,0,0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,13.0,7.0,5.0,1.0,1.0,1.0,28.0,9.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,2.0,15.0,3.0,3.0,1.0,5.0,2.0,2.0,1.0,1.0,1.0,12.0,1.0,1.0,12.0,1.0,2.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,14.0,3.0,1.0,4.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,3.0,1.0,1.0,2.0,1.0,1.0,1.0,12.0,1.0,1.0,1.0,1.0,1.0,6.0,1.0,1.0,1.0,1.0,1.0,1.0,3.0,2.0,1.0,1.0,1.0,1.0,1.0,2.0,6.0,1.0,5.0,1.0,1.0,1.0,13.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,2.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,14.0,0.0,7.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,23.0,0.0,0.0,0.0,0.0,1.0,0.0,12.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,astfiles
@relation 3mallory_dataset_SFS_3

@attribute instanceID {protobuf.js,}
@attribute 'functionIDCount' numeric
@attribute 'CFGNodeCount' numeric
@attribute 'ASTFunctionIDCount' numeric
@attribute 'getMaxDepthASTLeaf' numeric
@attribute 'wordUnigramsC 0=["package",]' numeric
@attribute 'wordUnigramsC 1=["function"]' numeric
@attribute 'wordUnigramsC 2=[non-detected]' numeric
@attribute 'wordUnigramsC 3=[mod(CodeMirror);]' numeric
@attribute 'wordUnigramsC 4=[strict";]' numeric
@attribute 'wordUnigramsC 5=[(stream.match(/^apostrophesymbol([^apostrophesymbol]|(apostrophesymbolapostrophesymbol))*apostrophesymbol/))]' numeric
@attribute 'wordUnigramsC 6=[(stream.match("//"))]' numeric
@attribute 'wordUnigramsC 7=[module]' numeric
@attribute 'wordUnigramsC 8=["string",]' numeric
@attribute 'wordUnigramsC 9=[(stream.match(/^[0-9\.+-]/,]' numeric
@attribute 'wordUnigramsC 10=[+]' numeric
@attribute 'wordUnigramsC 11=[an]' numeric
@attribute 'wordUnigramsC 12=[Handle]' numeric
@attribute 'wordUnigramsC 13=["use]' numeric
@attribute 'wordUnigramsC 14=[MIT]' numeric
@attribute 'wordUnigramsC 15=[license:]' numeric
@attribute 'wordUnigramsC 16=[;]' numeric
@attribute 'wordUnigramsC 17=[=]' numeric
@attribute 'wordUnigramsC 18=[items]' numeric
@attribute 'wordUnigramsC 19=[define(["../../lib/codemirror"],]' numeric
@attribute 'wordUnigramsC 20=[whitespaces]' numeric
@attribute 'wordUnigramsC 21=["protobuf",]' numeric
@attribute 'wordUnigramsC 22=["fixed32",]' numeric
@attribute 'wordUnigramsC 23=["keyword";]' numeric
@attribute 'wordUnigramsC 24=[})(function(CodeMirror)]' numeric
@attribute 'wordUnigramsC 25=[tokenBase};]' numeric
@attribute 'wordUnigramsC 26=[(c)]' numeric
@attribute 'wordUnigramsC 27=[stream.skipToEnd();]' numeric
@attribute 'wordUnigramsC 28=["default",]' numeric
@attribute 'wordUnigramsC 29=[by]' numeric
@attribute 'wordUnigramsC 30=["string";]' numeric
@attribute 'wordUnigramsC 31=[[]' numeric
@attribute 'wordUnigramsC 32=[typeof]' numeric
@attribute 'wordUnigramsC 33=[keywordArray]' numeric
@attribute 'wordUnigramsC 34=[one]' numeric
@attribute 'wordUnigramsC 35=[words]' numeric
@attribute 'wordUnigramsC 36=[});]' numeric
@attribute 'wordUnigramsC 37=[(typeof]' numeric
@attribute 'wordUnigramsC 38=[CodeMirror.registerHelper("hintWords",]' numeric
@attribute 'wordUnigramsC 39=["int32",]' numeric
@attribute 'wordUnigramsC 40=[Distributed]' numeric
@attribute 'wordUnigramsC 41=[{]' numeric
@attribute 'wordUnigramsC 42=[under]' numeric
@attribute 'wordUnigramsC 43=["sint32",]' numeric
@attribute 'wordUnigramsC 44=[}]' numeric
@attribute 'wordUnigramsC 45=["bytes",]' numeric
@attribute 'wordUnigramsC 46=[keywords]' numeric
@attribute 'wordUnigramsC 47=["variable";]' numeric
@attribute 'wordUnigramsC 48=[function()]' numeric
@attribute 'wordUnigramsC 49=["object"]' numeric
@attribute 'wordUnigramsC 50=[others]' numeric
@attribute 'wordUnigramsC 51=["required",]' numeric
@attribute 'wordUnigramsC 52=["enum",]' numeric
@attribute 'wordUnigramsC 53=[CodeMirror,]' numeric
@attribute 'wordUnigramsC 54=[wordRegexp(keywordArray);]' numeric
@attribute 'wordUnigramsC 55=[(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 56=[&&]' numeric
@attribute 'wordUnigramsC 57=[exports]' numeric
@attribute 'wordUnigramsC 58=["))\\b",]' numeric
@attribute 'wordUnigramsC 59=[Number]' numeric
@attribute 'wordUnigramsC 60=["i");]' numeric
@attribute 'wordUnigramsC 61=[false))]' numeric
@attribute 'wordUnigramsC 62=[env]' numeric
@attribute 'wordUnigramsC 63=["uint32",]' numeric
@attribute 'wordUnigramsC 64=[copyright]' numeric
@attribute 'wordUnigramsC 65=[mod(require("../../lib/codemirror"));]' numeric
@attribute 'wordUnigramsC 66=["optional",]' numeric
@attribute 'wordUnigramsC 67=["int64",]' numeric
@attribute 'wordUnigramsC 68=[else]' numeric
@attribute 'wordUnigramsC 69=[words.join(")|(")]' numeric
@attribute 'wordUnigramsC 70=[if]' numeric
@attribute 'wordUnigramsC 71=["number";]' numeric
@attribute 'wordUnigramsC 72=["extensions",]' numeric
@attribute 'wordUnigramsC 73=[var]' numeric
@attribute 'wordUnigramsC 74=[(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))]' numeric
@attribute 'wordUnigramsC 75=[define.amd)]' numeric
@attribute 'wordUnigramsC 76=[Plain]' numeric
@attribute 'wordUnigramsC 77=["sfixed32",]' numeric
@attribute 'wordUnigramsC 78=["import",]' numeric
@attribute 'wordUnigramsC 79=[wordRegexp(words)]' numeric
@attribute 'wordUnigramsC 80=[Literals]' numeric
@attribute 'wordUnigramsC 81=[http://codemirror.net/LICENSE]' numeric
@attribute 'wordUnigramsC 82=["packed",]' numeric
@attribute 'wordUnigramsC 83=[keywordArray);]' numeric
@attribute 'wordUnigramsC 84=[{token:]' numeric
@attribute 'wordUnigramsC 85=["message",]' numeric
@attribute 'wordUnigramsC 86=["bool",]' numeric
@attribute 'wordUnigramsC 87=["reserved",]' numeric
@attribute 'wordUnigramsC 88=[(stream.match(/^"([^"]|(""))*"/))]' numeric
@attribute 'wordUnigramsC 89=["fixed64",]' numeric
@attribute 'wordUnigramsC 90=[};]' numeric
@attribute 'wordUnigramsC 91=[CommonJS]' numeric
@attribute 'wordUnigramsC 92=["repeated",]' numeric
@attribute 'wordUnigramsC 93=[identifiers]' numeric
@attribute 'wordUnigramsC 94=[(stream.match(identifiers))]' numeric
@attribute 'wordUnigramsC 95=[Strings]' numeric
@attribute 'wordUnigramsC 96=["float",]' numeric
@attribute 'wordUnigramsC 97=[return]' numeric
@attribute 'wordUnigramsC 98=[];]' numeric
@attribute 'wordUnigramsC 99=[mod);]' numeric
@attribute 'wordUnigramsC 100=[(function(mod)]' numeric
@attribute 'wordUnigramsC 101=[(stream.match(keywords))]' numeric
@attribute 'wordUnigramsC 102=["object")]' numeric
@attribute 'wordUnigramsC 103=[function]' numeric
@attribute 'wordUnigramsC 104=[AMD]' numeric
@attribute 'wordUnigramsC 105=[(stream.match(/^[+-]?0x[0-9a-fA-F]+/))]' numeric
@attribute 'wordUnigramsC 106=["uint64",]' numeric
@attribute 'wordUnigramsC 107=["sint64",]' numeric
@attribute 'wordUnigramsC 108=[Marijn]' numeric
@attribute 'wordUnigramsC 109=[RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");]' numeric
@attribute 'wordUnigramsC 110=[==]' numeric
@attribute 'wordUnigramsC 111=[new]' numeric
@attribute 'wordUnigramsC 112=["comment";]' numeric
@attribute 'wordUnigramsC 113=[Haverbeke]' numeric
@attribute 'wordUnigramsC 114=["protobuf");]' numeric
@attribute 'wordUnigramsC 115=[stream.next();]' numeric
@attribute 'wordUnigramsC 116=[line]' numeric
@attribute 'wordUnigramsC 117=[null;]' numeric
@attribute 'wordUnigramsC 118=[and]' numeric
@attribute 'wordUnigramsC 119=[browser]' numeric
@attribute 'wordUnigramsC 120=[define]' numeric
@attribute 'wordUnigramsC 121=[CodeMirror.defineMode("protobuf",]' numeric
@attribute 'wordUnigramsC 122=["syntax",]' numeric
@attribute 'wordUnigramsC 123=[tokenBase(stream)]' numeric
@attribute 'wordUnigramsC 124=[//]' numeric
@attribute 'wordUnigramsC 125=["double",]' numeric
@attribute 'wordUnigramsC 126=[Comments]' numeric
@attribute 'wordUnigramsC 127=["sfixed64"]' numeric
@attribute 'wordUnigramsC 128=[(stream.eatSpace())]' numeric
@attribute 'wordUnigramsC 129=[RegExp("^(("]' numeric
@attribute 'wordUnigramsC 130=[CodeMirror.defineMIME("text/x-protobuf",]' numeric
@attribute 'ASTNodeTypesTF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTF 1=[mod]' numeric
@attribute 'ASTNodeTypesTF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTF 3=[callee]' numeric
@attribute 'ASTNodeTypesTF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTF 5=[type]' numeric
@attribute 'ASTNodeTypesTF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTF 7=[required]' numeric
@attribute 'ASTNodeTypesTF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTF 9=[number]' numeric
@attribute 'ASTNodeTypesTF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTF 11=[int64]' numeric
@attribute 'ASTNodeTypesTF 12=[property]' numeric
@attribute 'ASTNodeTypesTF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTF 15=[id]' numeric
@attribute 'ASTNodeTypesTF 16=[join]' numeric
@attribute 'ASTNodeTypesTF 17=[text]' numeric
@attribute 'ASTNodeTypesTF 18=[strict]' numeric
@attribute 'ASTNodeTypesTF 19=[init]' numeric
@attribute 'ASTNodeTypesTF 20=[method]' numeric
@attribute 'ASTNodeTypesTF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTF 22=[double]' numeric
@attribute 'ASTNodeTypesTF 23=[var]' numeric
@attribute 'ASTNodeTypesTF 24=[module]' numeric
@attribute 'ASTNodeTypesTF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 26=[raw]' numeric
@attribute 'ASTNodeTypesTF 27=[require]' numeric
@attribute 'ASTNodeTypesTF 28=[optional]' numeric
@attribute 'ASTNodeTypesTF 29=[params]' numeric
@attribute 'ASTNodeTypesTF 30=[enum]' numeric
@attribute 'ASTNodeTypesTF 31=[script]' numeric
@attribute 'ASTNodeTypesTF 32=[0]' numeric
@attribute 'ASTNodeTypesTF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTF 35=[regex]' numeric
@attribute 'ASTNodeTypesTF 36=[left]' numeric
@attribute 'ASTNodeTypesTF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTF 40=[9]' numeric
@attribute 'ASTNodeTypesTF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTF 43=[object]' numeric
@attribute 'ASTNodeTypesTF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTF 45=[computed]' numeric
@attribute 'ASTNodeTypesTF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTF 47=[F]' numeric
@attribute 'ASTNodeTypesTF 48=[Za]' numeric
@attribute 'ASTNodeTypesTF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTF 50=[flags]' numeric
@attribute 'ASTNodeTypesTF 51=[0x]' numeric
@attribute 'ASTNodeTypesTF 52=[9a]' numeric
@attribute 'ASTNodeTypesTF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTF 56=[default]' numeric
@attribute 'ASTNodeTypesTF 57=[stream]' numeric
@attribute 'ASTNodeTypesTF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTF 59=[Property]' numeric
@attribute 'ASTNodeTypesTF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTF 61=[key]' numeric
@attribute 'ASTNodeTypesTF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTF 63=[b]' numeric
@attribute 'ASTNodeTypesTF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTF 65=[expression]' numeric
@attribute 'ASTNodeTypesTF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTF 67=[d]' numeric
@attribute 'ASTNodeTypesTF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTF 70=[words]' numeric
@attribute 'ASTNodeTypesTF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTF 72=[i]' numeric
@attribute 'ASTNodeTypesTF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTF 74=[right]' numeric
@attribute 'ASTNodeTypesTF 75=[token]' numeric
@attribute 'ASTNodeTypesTF 76=[int32]' numeric
@attribute 'ASTNodeTypesTF 77=[elements]' numeric
@attribute 'ASTNodeTypesTF 78=[x]' numeric
@attribute 'ASTNodeTypesTF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTF 80=[z]' numeric
@attribute 'ASTNodeTypesTF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTF 83=[argument]' numeric
@attribute 'ASTNodeTypesTF 84=[lib]' numeric
@attribute 'ASTNodeTypesTF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTF 87=[use]' numeric
@attribute 'ASTNodeTypesTF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTF 89=[body]' numeric
@attribute 'ASTNodeTypesTF 90=[float]' numeric
@attribute 'ASTNodeTypesTF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTF 92=[operator]' numeric
@attribute 'ASTNodeTypesTF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTF 96=[function]' numeric
@attribute 'ASTNodeTypesTF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTF 98=[fA]' numeric
@attribute 'ASTNodeTypesTF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTF 100=[Program]' numeric
@attribute 'ASTNodeTypesTF 101=[package]' numeric
@attribute 'ASTNodeTypesTF 102=[test]' numeric
@attribute 'ASTNodeTypesTF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTF 104=[kind]' numeric
@attribute 'ASTNodeTypesTF 105=[null]' numeric
@attribute 'ASTNodeTypesTF 106=[name]' numeric
@attribute 'ASTNodeTypesTF 107=[true]' numeric
@attribute 'ASTNodeTypesTF 108=[amd]' numeric
@attribute 'ASTNodeTypesTF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTF 110=[next]' numeric
@attribute 'ASTNodeTypesTF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTF 112=[_A]' numeric
@attribute 'ASTNodeTypesTF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTF 114=[import]' numeric
@attribute 'ASTNodeTypesTF 115=[bool]' numeric
@attribute 'ASTNodeTypesTF 116=[string]' numeric
@attribute 'ASTNodeTypesTF 117=[exports]' numeric
@attribute 'ASTNodeTypesTF 118=[generator]' numeric
@attribute 'ASTNodeTypesTF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTF 124=[define]' numeric
@attribute 'ASTNodeTypesTF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTF 127=[packed]' numeric
@attribute 'ASTNodeTypesTF 128=[value]' numeric
@attribute 'ASTNodeTypesTF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTF 130=[false]' numeric
@attribute 'ASTNodeTypesTF 131=[match]' numeric
@attribute 'ASTNodeTypesTF 132=[message]' numeric
@attribute 'ASTNodeTypesTF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTF 134=[directive]' numeric
@attribute 'ASTNodeTypesTF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTF 136=[z0]' numeric
@attribute 'ASTNodeTypesTF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTF 138=[variable]' numeric
@attribute 'ASTNodeTypesTF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTF 141=[comment]' numeric
@attribute 'ASTNodeTypesTF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTF 143=[properties]' numeric
@attribute 'ASTNodeTypesTFIDF 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypesTFIDF 1=[mod]' numeric
@attribute 'ASTNodeTypesTFIDF 2=[prefix]' numeric
@attribute 'ASTNodeTypesTFIDF 3=[callee]' numeric
@attribute 'ASTNodeTypesTFIDF 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 5=[type]' numeric
@attribute 'ASTNodeTypesTFIDF 6=[tokenBase]' numeric
@attribute 'ASTNodeTypesTFIDF 7=[required]' numeric
@attribute 'ASTNodeTypesTFIDF 8=[IfStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 9=[number]' numeric
@attribute 'ASTNodeTypesTFIDF 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 11=[int64]' numeric
@attribute 'ASTNodeTypesTFIDF 12=[property]' numeric
@attribute 'ASTNodeTypesTFIDF 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypesTFIDF 15=[id]' numeric
@attribute 'ASTNodeTypesTFIDF 16=[join]' numeric
@attribute 'ASTNodeTypesTFIDF 17=[text]' numeric
@attribute 'ASTNodeTypesTFIDF 18=[strict]' numeric
@attribute 'ASTNodeTypesTFIDF 19=[init]' numeric
@attribute 'ASTNodeTypesTFIDF 20=[method]' numeric
@attribute 'ASTNodeTypesTFIDF 21=[NewExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 22=[double]' numeric
@attribute 'ASTNodeTypesTFIDF 23=[var]' numeric
@attribute 'ASTNodeTypesTFIDF 24=[module]' numeric
@attribute 'ASTNodeTypesTFIDF 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 26=[raw]' numeric
@attribute 'ASTNodeTypesTFIDF 27=[require]' numeric
@attribute 'ASTNodeTypesTFIDF 28=[optional]' numeric
@attribute 'ASTNodeTypesTFIDF 29=[params]' numeric
@attribute 'ASTNodeTypesTFIDF 30=[enum]' numeric
@attribute 'ASTNodeTypesTFIDF 31=[script]' numeric
@attribute 'ASTNodeTypesTFIDF 32=[0]' numeric
@attribute 'ASTNodeTypesTFIDF 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 34=[extensions]' numeric
@attribute 'ASTNodeTypesTFIDF 35=[regex]' numeric
@attribute 'ASTNodeTypesTFIDF 36=[left]' numeric
@attribute 'ASTNodeTypesTFIDF 37=[reserved]' numeric
@attribute 'ASTNodeTypesTFIDF 38=[sourceType]' numeric
@attribute 'ASTNodeTypesTFIDF 39=[codemirror]' numeric
@attribute 'ASTNodeTypesTFIDF 40=[9]' numeric
@attribute 'ASTNodeTypesTFIDF 41=[uint64]' numeric
@attribute 'ASTNodeTypesTFIDF 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypesTFIDF 43=[object]' numeric
@attribute 'ASTNodeTypesTFIDF 44=[EeDd]' numeric
@attribute 'ASTNodeTypesTFIDF 45=[computed]' numeric
@attribute 'ASTNodeTypesTFIDF 46=[eatSpace]' numeric
@attribute 'ASTNodeTypesTFIDF 47=[F]' numeric
@attribute 'ASTNodeTypesTFIDF 48=[Za]' numeric
@attribute 'ASTNodeTypesTFIDF 49=[pattern]' numeric
@attribute 'ASTNodeTypesTFIDF 50=[flags]' numeric
@attribute 'ASTNodeTypesTFIDF 51=[0x]' numeric
@attribute 'ASTNodeTypesTFIDF 52=[9a]' numeric
@attribute 'ASTNodeTypesTFIDF 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 55=[defineMIME]' numeric
@attribute 'ASTNodeTypesTFIDF 56=[default]' numeric
@attribute 'ASTNodeTypesTFIDF 57=[stream]' numeric
@attribute 'ASTNodeTypesTFIDF 58=[CallExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 59=[Property]' numeric
@attribute 'ASTNodeTypesTFIDF 60=[typeof]' numeric
@attribute 'ASTNodeTypesTFIDF 61=[key]' numeric
@attribute 'ASTNodeTypesTFIDF 62=[fixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 63=[b]' numeric
@attribute 'ASTNodeTypesTFIDF 64=[sint64]' numeric
@attribute 'ASTNodeTypesTFIDF 65=[expression]' numeric
@attribute 'ASTNodeTypesTFIDF 66=[hintWords]' numeric
@attribute 'ASTNodeTypesTFIDF 67=[d]' numeric
@attribute 'ASTNodeTypesTFIDF 68=[identifiers]' numeric
@attribute 'ASTNodeTypesTFIDF 69=[keywordArray]' numeric
@attribute 'ASTNodeTypesTFIDF 70=[words]' numeric
@attribute 'ASTNodeTypesTFIDF 71=[alternate]' numeric
@attribute 'ASTNodeTypesTFIDF 72=[i]' numeric
@attribute 'ASTNodeTypesTFIDF 73=[xa1]' numeric
@attribute 'ASTNodeTypesTFIDF 74=[right]' numeric
@attribute 'ASTNodeTypesTFIDF 75=[token]' numeric
@attribute 'ASTNodeTypesTFIDF 76=[int32]' numeric
@attribute 'ASTNodeTypesTFIDF 77=[elements]' numeric
@attribute 'ASTNodeTypesTFIDF 78=[x]' numeric
@attribute 'ASTNodeTypesTFIDF 79=[consequent]' numeric
@attribute 'ASTNodeTypesTFIDF 80=[z]' numeric
@attribute 'ASTNodeTypesTFIDF 81=[fixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 82=[protobuf]' numeric
@attribute 'ASTNodeTypesTFIDF 83=[argument]' numeric
@attribute 'ASTNodeTypesTFIDF 84=[lib]' numeric
@attribute 'ASTNodeTypesTFIDF 85=[keywords]' numeric
@attribute 'ASTNodeTypesTFIDF 86=[sfixed64]' numeric
@attribute 'ASTNodeTypesTFIDF 87=[use]' numeric
@attribute 'ASTNodeTypesTFIDF 88=[registerHelper]' numeric
@attribute 'ASTNodeTypesTFIDF 89=[body]' numeric
@attribute 'ASTNodeTypesTFIDF 90=[float]' numeric
@attribute 'ASTNodeTypesTFIDF 91=[repeated]' numeric
@attribute 'ASTNodeTypesTFIDF 92=[operator]' numeric
@attribute 'ASTNodeTypesTFIDF 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypesTFIDF 94=[Identifier]' numeric
@attribute 'ASTNodeTypesTFIDF 95=[Literal]' numeric
@attribute 'ASTNodeTypesTFIDF 96=[function]' numeric
@attribute 'ASTNodeTypesTFIDF 97=[uint32]' numeric
@attribute 'ASTNodeTypesTFIDF 98=[fA]' numeric
@attribute 'ASTNodeTypesTFIDF 99=[keyword]' numeric
@attribute 'ASTNodeTypesTFIDF 100=[Program]' numeric
@attribute 'ASTNodeTypesTFIDF 101=[package]' numeric
@attribute 'ASTNodeTypesTFIDF 102=[test]' numeric
@attribute 'ASTNodeTypesTFIDF 103=[RegExp]' numeric
@attribute 'ASTNodeTypesTFIDF 104=[kind]' numeric
@attribute 'ASTNodeTypesTFIDF 105=[null]' numeric
@attribute 'ASTNodeTypesTFIDF 106=[name]' numeric
@attribute 'ASTNodeTypesTFIDF 107=[true]' numeric
@attribute 'ASTNodeTypesTFIDF 108=[amd]' numeric
@attribute 'ASTNodeTypesTFIDF 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 110=[next]' numeric
@attribute 'ASTNodeTypesTFIDF 111=[defineMode]' numeric
@attribute 'ASTNodeTypesTFIDF 112=[_A]' numeric
@attribute 'ASTNodeTypesTFIDF 113=[sint32]' numeric
@attribute 'ASTNodeTypesTFIDF 114=[import]' numeric
@attribute 'ASTNodeTypesTFIDF 115=[bool]' numeric
@attribute 'ASTNodeTypesTFIDF 116=[string]' numeric
@attribute 'ASTNodeTypesTFIDF 117=[exports]' numeric
@attribute 'ASTNodeTypesTFIDF 118=[generator]' numeric
@attribute 'ASTNodeTypesTFIDF 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 120=[shorthand]' numeric
@attribute 'ASTNodeTypesTFIDF 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 123=[uffff]' numeric
@attribute 'ASTNodeTypesTFIDF 124=[define]' numeric
@attribute 'ASTNodeTypesTFIDF 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypesTFIDF 126=[sfixed32]' numeric
@attribute 'ASTNodeTypesTFIDF 127=[packed]' numeric
@attribute 'ASTNodeTypesTFIDF 128=[value]' numeric
@attribute 'ASTNodeTypesTFIDF 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypesTFIDF 130=[false]' numeric
@attribute 'ASTNodeTypesTFIDF 131=[match]' numeric
@attribute 'ASTNodeTypesTFIDF 132=[message]' numeric
@attribute 'ASTNodeTypesTFIDF 133=[declarations]' numeric
@attribute 'ASTNodeTypesTFIDF 134=[directive]' numeric
@attribute 'ASTNodeTypesTFIDF 135=[bytes]' numeric
@attribute 'ASTNodeTypesTFIDF 136=[z0]' numeric
@attribute 'ASTNodeTypesTFIDF 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypesTFIDF 138=[variable]' numeric
@attribute 'ASTNodeTypesTFIDF 139=[syntax]' numeric
@attribute 'ASTNodeTypesTFIDF 140=[arguments]' numeric
@attribute 'ASTNodeTypesTFIDF 141=[comment]' numeric
@attribute 'ASTNodeTypesTFIDF 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypesTFIDF 143=[properties]' numeric
@attribute 'ASTNodeTypeAvgDep 0=[wordRegexp]' numeric
@attribute 'ASTNodeTypeAvgDep 1=[mod]' numeric
@attribute 'ASTNodeTypeAvgDep 2=[prefix]' numeric
@attribute 'ASTNodeTypeAvgDep 3=[callee]' numeric
@attribute 'ASTNodeTypeAvgDep 4=[EmptyStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 5=[type]' numeric
@attribute 'ASTNodeTypeAvgDep 6=[tokenBase]' numeric
@attribute 'ASTNodeTypeAvgDep 7=[required]' numeric
@attribute 'ASTNodeTypeAvgDep 8=[IfStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 9=[number]' numeric
@attribute 'ASTNodeTypeAvgDep 10=[BinaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 11=[int64]' numeric
@attribute 'ASTNodeTypeAvgDep 12=[property]' numeric
@attribute 'ASTNodeTypeAvgDep 13=[ReturnStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 14=[skipToEnd]' numeric
@attribute 'ASTNodeTypeAvgDep 15=[id]' numeric
@attribute 'ASTNodeTypeAvgDep 16=[join]' numeric
@attribute 'ASTNodeTypeAvgDep 17=[text]' numeric
@attribute 'ASTNodeTypeAvgDep 18=[strict]' numeric
@attribute 'ASTNodeTypeAvgDep 19=[init]' numeric
@attribute 'ASTNodeTypeAvgDep 20=[method]' numeric
@attribute 'ASTNodeTypeAvgDep 21=[NewExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 22=[double]' numeric
@attribute 'ASTNodeTypeAvgDep 23=[var]' numeric
@attribute 'ASTNodeTypeAvgDep 24=[module]' numeric
@attribute 'ASTNodeTypeAvgDep 25=[apostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 26=[raw]' numeric
@attribute 'ASTNodeTypeAvgDep 27=[require]' numeric
@attribute 'ASTNodeTypeAvgDep 28=[optional]' numeric
@attribute 'ASTNodeTypeAvgDep 29=[params]' numeric
@attribute 'ASTNodeTypeAvgDep 30=[enum]' numeric
@attribute 'ASTNodeTypeAvgDep 31=[script]' numeric
@attribute 'ASTNodeTypeAvgDep 32=[0]' numeric
@attribute 'ASTNodeTypeAvgDep 33=[MemberExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 34=[extensions]' numeric
@attribute 'ASTNodeTypeAvgDep 35=[regex]' numeric
@attribute 'ASTNodeTypeAvgDep 36=[left]' numeric
@attribute 'ASTNodeTypeAvgDep 37=[reserved]' numeric
@attribute 'ASTNodeTypeAvgDep 38=[sourceType]' numeric
@attribute 'ASTNodeTypeAvgDep 39=[codemirror]' numeric
@attribute 'ASTNodeTypeAvgDep 40=[9]' numeric
@attribute 'ASTNodeTypeAvgDep 41=[uint64]' numeric
@attribute 'ASTNodeTypeAvgDep 42=[CodeMirror]' numeric
@attribute 'ASTNodeTypeAvgDep 43=[object]' numeric
@attribute 'ASTNodeTypeAvgDep 44=[EeDd]' numeric
@attribute 'ASTNodeTypeAvgDep 45=[computed]' numeric
@attribute 'ASTNodeTypeAvgDep 46=[eatSpace]' numeric
@attribute 'ASTNodeTypeAvgDep 47=[F]' numeric
@attribute 'ASTNodeTypeAvgDep 48=[Za]' numeric
@attribute 'ASTNodeTypeAvgDep 49=[pattern]' numeric
@attribute 'ASTNodeTypeAvgDep 50=[flags]' numeric
@attribute 'ASTNodeTypeAvgDep 51=[0x]' numeric
@attribute 'ASTNodeTypeAvgDep 52=[9a]' numeric
@attribute 'ASTNodeTypeAvgDep 53=[BlockStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 54=[LogicalExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 55=[defineMIME]' numeric
@attribute 'ASTNodeTypeAvgDep 56=[default]' numeric
@attribute 'ASTNodeTypeAvgDep 57=[stream]' numeric
@attribute 'ASTNodeTypeAvgDep 58=[CallExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 59=[Property]' numeric
@attribute 'ASTNodeTypeAvgDep 60=[typeof]' numeric
@attribute 'ASTNodeTypeAvgDep 61=[key]' numeric
@attribute 'ASTNodeTypeAvgDep 62=[fixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 63=[b]' numeric
@attribute 'ASTNodeTypeAvgDep 64=[sint64]' numeric
@attribute 'ASTNodeTypeAvgDep 65=[expression]' numeric
@attribute 'ASTNodeTypeAvgDep 66=[hintWords]' numeric
@attribute 'ASTNodeTypeAvgDep 67=[d]' numeric
@attribute 'ASTNodeTypeAvgDep 68=[identifiers]' numeric
@attribute 'ASTNodeTypeAvgDep 69=[keywordArray]' numeric
@attribute 'ASTNodeTypeAvgDep 70=[words]' numeric
@attribute 'ASTNodeTypeAvgDep 71=[alternate]' numeric
@attribute 'ASTNodeTypeAvgDep 72=[i]' numeric
@attribute 'ASTNodeTypeAvgDep 73=[xa1]' numeric
@attribute 'ASTNodeTypeAvgDep 74=[right]' numeric
@attribute 'ASTNodeTypeAvgDep 75=[token]' numeric
@attribute 'ASTNodeTypeAvgDep 76=[int32]' numeric
@attribute 'ASTNodeTypeAvgDep 77=[elements]' numeric
@attribute 'ASTNodeTypeAvgDep 78=[x]' numeric
@attribute 'ASTNodeTypeAvgDep 79=[consequent]' numeric
@attribute 'ASTNodeTypeAvgDep 80=[z]' numeric
@attribute 'ASTNodeTypeAvgDep 81=[fixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 82=[protobuf]' numeric
@attribute 'ASTNodeTypeAvgDep 83=[argument]' numeric
@attribute 'ASTNodeTypeAvgDep 84=[lib]' numeric
@attribute 'ASTNodeTypeAvgDep 85=[keywords]' numeric
@attribute 'ASTNodeTypeAvgDep 86=[sfixed64]' numeric
@attribute 'ASTNodeTypeAvgDep 87=[use]' numeric
@attribute 'ASTNodeTypeAvgDep 88=[registerHelper]' numeric
@attribute 'ASTNodeTypeAvgDep 89=[body]' numeric
@attribute 'ASTNodeTypeAvgDep 90=[float]' numeric
@attribute 'ASTNodeTypeAvgDep 91=[repeated]' numeric
@attribute 'ASTNodeTypeAvgDep 92=[operator]' numeric
@attribute 'ASTNodeTypeAvgDep 93=[VariableDeclarator]' numeric
@attribute 'ASTNodeTypeAvgDep 94=[Identifier]' numeric
@attribute 'ASTNodeTypeAvgDep 95=[Literal]' numeric
@attribute 'ASTNodeTypeAvgDep 96=[function]' numeric
@attribute 'ASTNodeTypeAvgDep 97=[uint32]' numeric
@attribute 'ASTNodeTypeAvgDep 98=[fA]' numeric
@attribute 'ASTNodeTypeAvgDep 99=[keyword]' numeric
@attribute 'ASTNodeTypeAvgDep 100=[Program]' numeric
@attribute 'ASTNodeTypeAvgDep 101=[package]' numeric
@attribute 'ASTNodeTypeAvgDep 102=[test]' numeric
@attribute 'ASTNodeTypeAvgDep 103=[RegExp]' numeric
@attribute 'ASTNodeTypeAvgDep 104=[kind]' numeric
@attribute 'ASTNodeTypeAvgDep 105=[null]' numeric
@attribute 'ASTNodeTypeAvgDep 106=[name]' numeric
@attribute 'ASTNodeTypeAvgDep 107=[true]' numeric
@attribute 'ASTNodeTypeAvgDep 108=[amd]' numeric
@attribute 'ASTNodeTypeAvgDep 109=[ArrayExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 110=[next]' numeric
@attribute 'ASTNodeTypeAvgDep 111=[defineMode]' numeric
@attribute 'ASTNodeTypeAvgDep 112=[_A]' numeric
@attribute 'ASTNodeTypeAvgDep 113=[sint32]' numeric
@attribute 'ASTNodeTypeAvgDep 114=[import]' numeric
@attribute 'ASTNodeTypeAvgDep 115=[bool]' numeric
@attribute 'ASTNodeTypeAvgDep 116=[string]' numeric
@attribute 'ASTNodeTypeAvgDep 117=[exports]' numeric
@attribute 'ASTNodeTypeAvgDep 118=[generator]' numeric
@attribute 'ASTNodeTypeAvgDep 119=[UnaryExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 120=[shorthand]' numeric
@attribute 'ASTNodeTypeAvgDep 121=[FunctionDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 122=[FunctionExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 123=[uffff]' numeric
@attribute 'ASTNodeTypeAvgDep 124=[define]' numeric
@attribute 'ASTNodeTypeAvgDep 125=[VariableDeclaration]' numeric
@attribute 'ASTNodeTypeAvgDep 126=[sfixed32]' numeric
@attribute 'ASTNodeTypeAvgDep 127=[packed]' numeric
@attribute 'ASTNodeTypeAvgDep 128=[value]' numeric
@attribute 'ASTNodeTypeAvgDep 129=[apostrophesymbolapostrophesymbol]' numeric
@attribute 'ASTNodeTypeAvgDep 130=[false]' numeric
@attribute 'ASTNodeTypeAvgDep 131=[match]' numeric
@attribute 'ASTNodeTypeAvgDep 132=[message]' numeric
@attribute 'ASTNodeTypeAvgDep 133=[declarations]' numeric
@attribute 'ASTNodeTypeAvgDep 134=[directive]' numeric
@attribute 'ASTNodeTypeAvgDep 135=[bytes]' numeric
@attribute 'ASTNodeTypeAvgDep 136=[z0]' numeric
@attribute 'ASTNodeTypeAvgDep 137=[ExpressionStatement]' numeric
@attribute 'ASTNodeTypeAvgDep 138=[variable]' numeric
@attribute 'ASTNodeTypeAvgDep 139=[syntax]' numeric
@attribute 'ASTNodeTypeAvgDep 140=[arguments]' numeric
@attribute 'ASTNodeTypeAvgDep 141=[comment]' numeric
@attribute 'ASTNodeTypeAvgDep 142=[ObjectExpression]' numeric
@attribute 'ASTNodeTypeAvgDep 143=[properties]' numeric
@attribute 'cppKeyword 0=[alignas]' numeric
@attribute 'cppKeyword 1=[alignof]' numeric
@attribute 'cppKeyword 2=[and]' numeric
@attribute 'cppKeyword 3=[and_eq]' numeric
@attribute 'cppKeyword 4=[asm]' numeric
@attribute 'cppKeyword 5=[auto]' numeric
@attribute 'cppKeyword 6=[bitand]' numeric
@attribute 'cppKeyword 7=[bitor]' numeric
@attribute 'cppKeyword 8=[bool]' numeric
@attribute 'cppKeyword 9=[break]' numeric
@attribute 'cppKeyword 10=[case]' numeric
@attribute 'cppKeyword 11=[catch]' numeric
@attribute 'cppKeyword 12=[char]' numeric
@attribute 'cppKeyword 13=[char16_t]' numeric
@attribute 'cppKeyword 14=[char32_t]' numeric
@attribute 'cppKeyword 15=[class]' numeric
@attribute 'cppKeyword 16=[compl]' numeric
@attribute 'cppKeyword 17=[const]' numeric
@attribute 'cppKeyword 18=[constexpr]' numeric
@attribute 'cppKeyword 19=[const_cast]' numeric
@attribute 'cppKeyword 20=[continue]' numeric
@attribute 'cppKeyword 21=[decltype]' numeric
@attribute 'cppKeyword 22=[default]' numeric
@attribute 'cppKeyword 23=[delete]' numeric
@attribute 'cppKeyword 24=[do]' numeric
@attribute 'cppKeyword 25=[double]' numeric
@attribute 'cppKeyword 26=[dynamic_cast]' numeric
@attribute 'cppKeyword 27=[else]' numeric
@attribute 'cppKeyword 28=[enum]' numeric
@attribute 'cppKeyword 29=[explicit]' numeric
@attribute 'cppKeyword 30=[export]' numeric
@attribute 'cppKeyword 31=[extern]' numeric
@attribute 'cppKeyword 32=[FALSE]' numeric
@attribute 'cppKeyword 33=[float]' numeric
@attribute 'cppKeyword 34=[for]' numeric
@attribute 'cppKeyword 35=[friend]' numeric
@attribute 'cppKeyword 36=[goto]' numeric
@attribute 'cppKeyword 37=[if]' numeric
@attribute 'cppKeyword 38=[inline]' numeric
@attribute 'cppKeyword 39=[int]' numeric
@attribute 'cppKeyword 40=[long]' numeric
@attribute 'cppKeyword 41=[mutable]' numeric
@attribute 'cppKeyword 42=[namespace]' numeric
@attribute 'cppKeyword 43=[new]' numeric
@attribute 'cppKeyword 44=[noexcept]' numeric
@attribute 'cppKeyword 45=[not]' numeric
@attribute 'cppKeyword 46=[not_eq]' numeric
@attribute 'cppKeyword 47=[nullptr]' numeric
@attribute 'cppKeyword 48=[operator]' numeric
@attribute 'cppKeyword 49=[or]' numeric
@attribute 'cppKeyword 50=[or_eq]' numeric
@attribute 'cppKeyword 51=[private]' numeric
@attribute 'cppKeyword 52=[protected]' numeric
@attribute 'cppKeyword 53=[public]' numeric
@attribute 'cppKeyword 54=[register]' numeric
@attribute 'cppKeyword 55=[reinterpret_cast]' numeric
@attribute 'cppKeyword 56=[return]' numeric
@attribute 'cppKeyword 57=[short]' numeric
@attribute 'cppKeyword 58=[signed]' numeric
@attribute 'cppKeyword 59=[sizeof]' numeric
@attribute 'cppKeyword 60=[static]' numeric
@attribute 'cppKeyword 61=[static_assert]' numeric
@attribute 'cppKeyword 62=[static_cast]' numeric
@attribute 'cppKeyword 63=[struct]' numeric
@attribute 'cppKeyword 64=[switch]' numeric
@attribute 'cppKeyword 65=[template]' numeric
@attribute 'cppKeyword 66=[this]' numeric
@attribute 'cppKeyword 67=[thread_local]' numeric
@attribute 'cppKeyword 68=[throw]' numeric
@attribute 'cppKeyword 69=[TRUE]' numeric
@attribute 'cppKeyword 70=[try]' numeric
@attribute 'cppKeyword 71=[typedef]' numeric
@attribute 'cppKeyword 72=[typeid]' numeric
@attribute 'cppKeyword 73=[typename]' numeric
@attribute 'cppKeyword 74=[union]' numeric
@attribute 'cppKeyword 75=[unsigned]' numeric
@attribute 'cppKeyword 76=[using]' numeric
@attribute 'cppKeyword 77=[virtual]' numeric
@attribute 'cppKeyword 78=[void]' numeric
@attribute 'cppKeyword 79=[volatile]' numeric
@attribute 'cppKeyword 80=[wchar_t]' numeric
@attribute 'cppKeyword 81=[while]' numeric
@attribute 'cppKeyword 82=[xor]' numeric
@attribute 'cppKeyword 83=[xor_eq]' numeric
@attribute 'cppKeyword 84=[override]' numeric
@attribute 'cppKeyword 85=[final]' numeric
@attribute 'authorName' {astfiles}

@data
protobuf.js,0,0,0,0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,13.0,7.0,5.0,1.0,1.0,1.0,28.0,9.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,2.0,15.0,3.0,3.0,1.0,5.0,2.0,2.0,1.0,1.0,1.0,12.0,1.0,1.0,12.0,1.0,2.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,14.0,3.0,1.0,4.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,3.0,1.0,1.0,2.0,1.0,1.0,1.0,12.0,1.0,1.0,1.0,1.0,1.0,6.0,1.0,1.0,1.0,1.0,1.0,1.0,3.0,2.0,1.0,1.0,1.0,1.0,1.0,2.0,6.0,1.0,5.0,1.0,1.0,1.0,13.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,2.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,14.0,0.0,7.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,23.0,0.0,0.0,0.0,0.0,1.0,0.0,12.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,astfiles
